

if __name__ == '__main__':
    query="[id: STRING, patient_id: STRING, serial_number: STRING, activity_type_code: CHAR(1), activity_type_name: CHAR(2), patient_name: STRING, id_card_type_code: CHAR(2) NOT NULL, id_card_type_name: CHAR(5) NOT NULL, id_card: STRING, gender_code: STRING, gender_name: STRING, birth_date: TIMESTAMP(6), nationality_code: CHAR(0) NOT NULL, nationality_name: CHAR(0) NOT NULL, nation_code: STRING, nation_name: STRING, permanent_addr_code: STRING, permanent_addr_name: STRING, permanent_addr_detail: STRING, current_addr_code: STRING, current_addr_name: STRING, current_addr_detail: STRING, workunit: STRING, marital_status_code: CHAR(2), marital_status_name: VARCHAR(8), education_code: CHAR(2), education_name: VARCHAR(8), nultitude_type_code: STRING, nultitude_type_name: STRING, nultitude_type_other: CHAR(0) NOT NULL, tel: STRING, contacts: STRING, contacts_tel: STRING, onset_date: TIMESTAMP(6), diagnose_time: TIMESTAMP(6), disease_code: STRING, disease_name: STRING, disease_other: STRING, diagnose_state_code: VARCHAR(1), diagnose_state_name: STRING, case_type_code: CHAR(1), case_type_name: STRING, dead_date: TIMESTAMP(3), is_dead_by_this_code: STRING, is_dead_by_this_name: CHAR(1), symptoms_name: STRING, symptoms_code: STRING, laboratory_detection_verdict_code: VARCHAR(2), laboratory_detection_verdict_name: VARCHAR(8), detection_positive_date: TIMESTAMP(6), detection_org_code: STRING, dt_diagnose: TIMESTAMP(6), afp_areatype1_code: STRING, afp_areatype1_name: STRING, afp_palsy_date: TIMESTAMP(6), afp_doctor_date: TIMESTAMP(6), afp_areatype2_code: STRING, afp_areatype2_name: STRING, afp_addrcode_code: STRING, afp_addr: STRING, afp_palsy_symptom: STRING, report_date: TIMESTAMP(6), discovery_mode_code: VARCHAR(2) NOT NULL, discovery_mode_name: STRING, discovery_mode_other: STRING, venereal_dis_code: VARCHAR(1) NOT NULL, venereal_dis_name: VARCHAR(2) NOT NULL, bs_transmission_code: CHAR(2), bs_transmission_name: STRING, bs_transmission_other: STRING, contact_type_code: STRING, contact_type_name: STRING, inject_count: STRING, nonweb_count: STRING, sm_count: STRING, contact_other: STRING, sinfect_code: STRING, sinfect_name: STRING, serverity_code: STRING, serverity_name: STRING, lab_result_code: STRING, lab_result_name: STRING, hbsag_code: STRING, hbsag_name: VARCHAR(11), hbsag_first: TIMESTAMP(6), hbsag_buxiang: STRING, hbsag_alt: STRING, hbcig_result_code: STRING, hbcig_result_name: STRING, hbliver_puncture_code: STRING, hbliver_puncture_name: STRING, hbsag_change_code: STRING, hbsag_change_name: STRING, contactflag_code: CHAR(1), contactflag_name: STRING, fill_doctor: STRING, notes: STRING, ncv_severity_name: STRING, ncv_severity_name0: STRING, ncv_severity_code: VARCHAR(1), foreign_type_code: STRING, foreign_type_name: CHAR(1), place_code: STRING, place_name: STRING, report_zone_code: STRING, report_zone_name: STRING, report_org_code: CHAR(9) NOT NULL, report_org_name: STRING, dept_code: STRING, dept_name: STRING, operator_id: STRING, operation_time: TIMESTAMP(6)]"
    sink="[id: STRING, patient_id: STRING, serial_number: STRING, activity_type_code: STRING, activity_type_name: STRING, patient_name: STRING, id_card_type_code: STRING, id_card_type_name: STRING, id_card: STRING, gender_code: STRING, gender_name: STRING, birth_date: TIMESTAMP(6), nationality_code: STRING, nationality_name: STRING, nation_code: STRING, nation_name: STRING, permanent_addr_code: STRING, permanent_addr_name: STRING, permanent_addr_detail: STRING, current_addr_code: STRING, current_addr_name: STRING, current_addr_detail: STRING, workunit: STRING, marital_status_code: STRING, marital_status_name: STRING, education_code: STRING, education_name: STRING, nultitude_type_code: STRING, nultitude_type_name: STRING, nultitude_type_other: STRING, tel: STRING, contacts: STRING, contacts_tel: STRING, onset_date: TIMESTAMP(6), diagnose_time: TIMESTAMP(6), disease_code: STRING, disease_name: STRING, disease_other: STRING, diagnose_state_code: STRING, diagnose_state_name: STRING, case_type_code: STRING, case_type_name: STRING, dead_date: TIMESTAMP(6), is_dead_by_this_code: STRING, is_dead_by_this_name: STRING, symptoms_name: STRING, symptoms_code: STRING, laboratory_detection_verdict_code: STRING, laboratory_detection_verdict_name: STRING, detection_positive_date: TIMESTAMP(6), detection_org_code: STRING, dt_diagnose: TIMESTAMP(6), afp_areatype1_code: STRING, afp_areatype1_name: STRING, afp_palsy_date: TIMESTAMP(6), afp_doctor_date: TIMESTAMP(6), afp_areatype2_code: STRING, afp_areatype2_name: STRING, afp_addrcode_code: STRING, afp_addr: STRING, afp_palsy_symptom: STRING, report_date: TIMESTAMP(6), discovery_mode_code: STRING, discovery_mode_name: STRING, discovery_mode_other: STRING, venereal_dis_code: STRING, venereal_dis_name: STRING, bs_transmission_code: STRING, bs_transmission_name: STRING, bs_transmission_other: STRING, contact_type_code: STRING, contact_type_name: STRING, inject_count: STRING, nonweb_count: STRING, sm_count: STRING, contact_other: STRING, sinfect_code: STRING, sinfect_name: STRING, serverity_code: STRING, serverity_name: STRING, lab_result_code: STRING, lab_result_name: STRING, hbsag_code: STRING, hbsag_name: STRING, hbsag_first: TIMESTAMP(6), hbsag_buxiang: STRING, hbsag_alt: STRING, hbcig_result_code: STRING, hbcig_result_name: STRING, hbliver_puncture_code: STRING, hbliver_puncture_name: STRING, hbsag_change_code: STRING, hbsag_change_name: STRING, contactflag_code: STRING, contactflag_name: STRING, fill_doctor: STRING, notes: STRING, ncv_severity_name: STRING, ncv_severity_code: STRING, foreign_type_code: STRING, foreign_type_name: STRING, place_code: STRING, place_name: STRING, report_zone_code: STRING, report_zone_name: STRING, report_org_code: STRING, report_org_name: STRING, dept_code: STRING, dept_name: STRING, operator_id: STRING, operation_time: TIMESTAMP(6)]"
    query=query.replace("[","").replace("]","")
    query_array=query.split(",")
    sink = sink.replace("[", "").replace("]", "")
    sink_array = sink.split(",")
    for i in range(len(query_array)):
        query_field = query_array[i].split(":")
        sink_field = sink_array[i].split(":")
        if(query_field[0]==sink_field[0]):
            if(sink_field[1].find(query_field[1])<0):
                print("column type not match {}->{}".format(query_field[1], sink_field[1]))
        else:
            print("column name not match {}->{}".format(query_field[0],sink_field[0]))

